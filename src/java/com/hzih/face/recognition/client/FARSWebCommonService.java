
package com.hzih.face.recognition.client;

import com.hzih.face.recognition.tcp.Service;
import com.hzih.face.recognition.tcp.ServiceUtils;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "FARSWebCommonService", targetNamespace = "http://criminal.endpoints.business.ivsign.com/", wsdlLocation = "http://192.168.1.2:8021/ws/criminal?wsdl")
public class FARSWebCommonService
    extends javax.xml.ws.Service
{

    private final static URL FARSWEBCOMMONSERVICE_WSDL_LOCATION;
    private final static WebServiceException FARSWEBCOMMONSERVICE_EXCEPTION;
    private final static QName FARSWEBCOMMONSERVICE_QNAME = new QName("http://criminal.endpoints.business.ivsign.com/", "FARSWebCommonService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            ServiceUtils serviceUtils = ServiceUtils.getService();
            url = new URL("http://"+ serviceUtils.faceServer+"/ws/criminal?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        FARSWEBCOMMONSERVICE_WSDL_LOCATION = url;
        FARSWEBCOMMONSERVICE_EXCEPTION = e;
    }

    public FARSWebCommonService() {
        super(__getWsdlLocation(), FARSWEBCOMMONSERVICE_QNAME);
    }

    public FARSWebCommonService(WebServiceFeature... features) {
        super(__getWsdlLocation(), FARSWEBCOMMONSERVICE_QNAME, features);
    }

    public FARSWebCommonService(URL wsdlLocation) {
        super(wsdlLocation, FARSWEBCOMMONSERVICE_QNAME);
    }

    public FARSWebCommonService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, FARSWEBCOMMONSERVICE_QNAME, features);
    }

    public FARSWebCommonService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FARSWebCommonService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns FARSWebCommon
     */
    @WebEndpoint(name = "FARSWebCommonPort")
    public FARSWebCommon getFARSWebCommonPort() {
        return super.getPort(new QName("http://criminal.endpoints.business.ivsign.com/", "FARSWebCommonPort"), FARSWebCommon.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FARSWebCommon
     */
    @WebEndpoint(name = "FARSWebCommonPort")
    public FARSWebCommon getFARSWebCommonPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://criminal.endpoints.business.ivsign.com/", "FARSWebCommonPort"), FARSWebCommon.class, features);
    }

    private static URL __getWsdlLocation() {
        if (FARSWEBCOMMONSERVICE_EXCEPTION!= null) {
            throw FARSWEBCOMMONSERVICE_EXCEPTION;
        }
        return FARSWEBCOMMONSERVICE_WSDL_LOCATION;
    }

}
